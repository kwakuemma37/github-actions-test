# actions are code or task that is already available and can be used in a workflow. Actions can be from an existing file or a repo

name: actions workflow

on: [push]

jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: "list files"
        run: |
            pwd
            ls  
      - name : checkout
      # By default github does not clone a repo into the director of the virtual machine that the runner is using becuase
      # the files in the repo might not be needed by an action.
      # We need to checkout into the commit of a repo that the workflow needs
      # we could have used git cli to do that eg git clone or etc. but actions/checout make it easier
        uses: actions/checkout@v1
      - name: list files after checkout
        run: |
          pwd
          ls -a
            
      - name: hellow world js actions 
        id: greet # if wee need to reference a step in another it should be given an id

        # reference to an action; here we're using an action that is published on public github repo.
        # you can use a branch name after "@" eg. action@master
        # NB: using branch might fail because it might contain breaking changes. Using version might help
        # Using a commit ID is the safest because it will never change
        #
        uses: actions/hello-world-javascript-action@v1

        # the "with" key parameter is used to provide input to an action
        with:
          # here, we're providing value to who-to-greet key that is expected by the action
          who-to-greet: Kwaku
      - name: log Greetin time
        run: echo "${{steps.greet.outputs.time}}"  # we're echoing the time of when step with id "greet" was executed.  

        